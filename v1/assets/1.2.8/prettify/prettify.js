!function(){var e=null;window.PR_SHOULD_USE_CONTINUATION=!0,function(){function t(e){function t(e){var t=e.charCodeAt(0);if(92!==t)return t;var n=e.charAt(1);return(t=u[n])?t:n>="0"&&"7">=n?parseInt(e.substring(1),8):"u"===n||"x"===n?parseInt(e.substring(2),16):e.charCodeAt(1)}function n(e){return 32>e?(16>e?"\\x0":"\\x")+e.toString(16):(e=String.fromCharCode(e),"\\"===e||"-"===e||"]"===e||"^"===e?"\\"+e:e)}function i(e){var i=e.substring(1,e.length-1).match(/\\u[\dA-Fa-f]{4}|\\x[\dA-Fa-f]{2}|\\[0-3][0-7]{0,2}|\\[0-7]{1,2}|\\[\S\s]|[^\\]/g),e=[],s="^"===i[0],r=["["];s&&r.push("^");for(var s=s?1:0,a=i.length;a>s;++s){var o=i[s];if(/\\[bdsw]/i.test(o))r.push(o);else{var l,o=t(o);a>s+2&&"-"===i[s+1]?(l=t(i[s+2]),s+=2):l=o,e.push([o,l]),65>l||o>122||(65>l||o>90||e.push([32|Math.max(65,o),32|Math.min(l,90)]),97>l||o>122||e.push([-33&Math.max(97,o),-33&Math.min(l,122)]))}}for(e.sort(function(e,t){return e[0]-t[0]||t[1]-e[1]}),i=[],a=[],s=0;s<e.length;++s)o=e[s],o[0]<=a[1]+1?a[1]=Math.max(a[1],o[1]):i.push(a=o);for(s=0;s<i.length;++s)o=i[s],r.push(n(o[0])),o[1]>o[0]&&(o[1]+1>o[0]&&r.push("-"),r.push(n(o[1])));return r.push("]"),r.join("")}function s(e){for(var t=e.source.match(/\[(?:[^\\\]]|\\[\S\s])*]|\\u[\dA-Fa-f]{4}|\\x[\dA-Fa-f]{2}|\\\d+|\\[^\dux]|\(\?[!:=]|[()^]|[^()[\\^]+/g),s=t.length,o=[],l=0,c=0;s>l;++l){var d=t[l];"("===d?++c:"\\"===d.charAt(0)&&(d=+d.substring(1))&&(c>=d?o[d]=-1:t[l]=n(d))}for(l=1;l<o.length;++l)-1===o[l]&&(o[l]=++r);for(c=l=0;s>l;++l)d=t[l],"("===d?(++c,o[c]||(t[l]="(?:")):"\\"===d.charAt(0)&&(d=+d.substring(1))&&c>=d&&(t[l]="\\"+o[d]);for(l=0;s>l;++l)"^"===t[l]&&"^"!==t[l+1]&&(t[l]="");if(e.ignoreCase&&a)for(l=0;s>l;++l)d=t[l],e=d.charAt(0),d.length>=2&&"["===e?t[l]=i(d):"\\"!==e&&(t[l]=d.replace(/[A-Za-z]/g,function(e){return e=e.charCodeAt(0),"["+String.fromCharCode(-33&e,32|e)+"]"}));return t.join("")}for(var r=0,a=!1,o=!1,l=0,c=e.length;c>l;++l){var d=e[l];if(d.ignoreCase)o=!0;else if(/[a-z]/i.test(d.source.replace(/\\u[\da-f]{4}|\\x[\da-f]{2}|\\[^UXux]/gi,""))){a=!0,o=!1;break}}for(var u={b:8,t:9,n:10,v:11,f:12,r:13},h=[],l=0,c=e.length;c>l;++l){if(d=e[l],d.global||d.multiline)throw Error(""+d);h.push("(?:"+s(d)+")")}return RegExp(h.join("|"),o?"gi":"g")}function n(e,t){function n(e){var l=e.nodeType;if(1==l){if(!i.test(e.className)){for(l=e.firstChild;l;l=l.nextSibling)n(l);l=e.nodeName.toLowerCase(),("br"===l||"li"===l)&&(s[o]="\n",a[o<<1]=r++,a[1|o++<<1]=e)}}else(3==l||4==l)&&(l=e.nodeValue,l.length&&(l=t?l.replace(/\r\n?/g,"\n"):l.replace(/[\t\n\r ]+/g," "),s[o]=l,a[o<<1]=r,r+=l.length,a[1|o++<<1]=e))}var i=/(?:^|\s)nocode(?:\s|$)/,s=[],r=0,a=[],o=0;return n(e),{a:s.join("").replace(/\n$/,""),d:a}}function i(e,t,n,i){t&&(e={a:t,e:e},n(e),i.push.apply(i,e.g))}function s(e){for(var t=void 0,n=e.firstChild;n;n=n.nextSibling)var i=n.nodeType,t=1===i?t?e:n:3===i?w.test(n.nodeValue)?e:t:t;return t===e?void 0:t}function r(n,s){function r(e){for(var t=e.e,n=[t,"pln"],d=0,u=e.a.match(a)||[],h={},p=0,f=u.length;f>p;++p){var m,g=u[p],v=h[g],y=void 0;if("string"==typeof v)m=!1;else{var b=o[g.charAt(0)];if(b)y=g.match(b[1]),v=b[0];else{for(m=0;l>m;++m)if(b=s[m],y=g.match(b[1])){v=b[0];break}y||(v="pln")}(m=v.length>=5&&"lang-"===v.substring(0,5))&&(!y||"string"!=typeof y[1])&&(m=!1,v="src"),m||(h[g]=v)}if(b=d,d+=g.length,m){m=y[1];var _=g.indexOf(m),w=_+m.length;y[2]&&(w=g.length-y[2].length,_=w-m.length),v=v.substring(5),i(t+b,g.substring(0,_),r,n),i(t+b+_,m,c(v,m),n),i(t+b+w,g.substring(w),r,n)}else n.push(t+b,v)}e.g=n}var a,o={};!function(){for(var i=n.concat(s),r=[],l={},c=0,d=i.length;d>c;++c){var u=i[c],h=u[3];if(h)for(var p=h.length;--p>=0;)o[h.charAt(p)]=u;u=u[1],h=""+u,l.hasOwnProperty(h)||(r.push(u),l[h]=e)}r.push(/[\S\s]/),a=t(r)}();var l=s.length;return r}function a(t){var n=[],i=[];t.tripleQuotedStrings?n.push(["str",/^(?:'''(?:[^'\\]|\\[\S\s]|''?(?=[^']))*(?:'''|$)|"""(?:[^"\\]|\\[\S\s]|""?(?=[^"]))*(?:"""|$)|'(?:[^'\\]|\\[\S\s])*(?:'|$)|"(?:[^"\\]|\\[\S\s])*(?:"|$))/,e,"'\""]):t.multiLineStrings?n.push(["str",/^(?:'(?:[^'\\]|\\[\S\s])*(?:'|$)|"(?:[^"\\]|\\[\S\s])*(?:"|$)|`(?:[^\\`]|\\[\S\s])*(?:`|$))/,e,"'\"`"]):n.push(["str",/^(?:'(?:[^\n\r'\\]|\\.)*(?:'|$)|"(?:[^\n\r"\\]|\\.)*(?:"|$))/,e,"\"'"]),t.verbatimStrings&&i.push(["str",/^@"(?:[^"]|"")*(?:"|$)/,e]);var s=t.hashComments;if(s&&(t.cStyleComments?(s>1?n.push(["com",/^#(?:##(?:[^#]|#(?!##))*(?:###|$)|.*)/,e,"#"]):n.push(["com",/^#(?:(?:define|e(?:l|nd)if|else|error|ifn?def|include|line|pragma|undef|warning)\b|[^\n\r]*)/,e,"#"]),i.push(["str",/^<(?:(?:(?:\.\.\/)*|\/?)(?:[\w-]+(?:\/[\w-]+)+)?[\w-]+\.h(?:h|pp|\+\+)?|[a-z]\w*)>/,e])):n.push(["com",/^#[^\n\r]*/,e,"#"])),t.cStyleComments&&(i.push(["com",/^\/\/[^\n\r]*/,e]),i.push(["com",/^\/\*[\S\s]*?(?:\*\/|$)/,e])),s=t.regexLiterals){var a=(s=s>1?"":"\n\r")?".":"[\\S\\s]";i.push(["lang-regex",RegExp("^(?:^^\\.?|[+-]|[!=]=?=?|\\#|%=?|&&?=?|\\(|\\*=?|[+\\-]=|->|\\/=?|::?|<<?=?|>>?>?=?|,|;|\\?|@|\\[|~|{|\\^\\^?=?|\\|\\|?=?|break|case|continue|delete|do|else|finally|instanceof|return|throw|try|typeof)\\s*("+("/(?=[^/*"+s+"])(?:[^/\\x5B\\x5C"+s+"]|\\x5C"+a+"|\\x5B(?:[^\\x5C\\x5D"+s+"]|\\x5C"+a+")*(?:\\x5D|$))+/")+")")])}return(s=t.types)&&i.push(["typ",s]),s=(""+t.keywords).replace(/^ | $/g,""),s.length&&i.push(["kwd",RegExp("^(?:"+s.replace(/[\s,]+/g,"|")+")\\b"),e]),n.push(["pln",/^\s+/,e," \r\n	 "]),s="^.[^\\s\\w.$@'\"`/\\\\]*",t.regexLiterals&&(s+="(?!s*/)"),i.push(["lit",/^@[$_a-z][\w$@]*/i,e],["typ",/^(?:[@_]?[A-Z]+[a-z][\w$@]*|\w+_t\b)/,e],["pln",/^[$_a-z][\w$@]*/i,e],["lit",/^(?:0x[\da-f]+|(?:\d(?:_\d+)*\d*(?:\.\d*)?|\.\d\+)(?:e[+-]?\d+)?)[a-z]*/i,e,"0123456789"],["pln",/^\\[\S\s]?/,e],["pun",RegExp(s),e]),r(n,i)}function o(e,t,n){function i(e){var t=e.nodeType;if(1!=t||r.test(e.className)){if((3==t||4==t)&&n){var l=e.nodeValue,c=l.match(a);c&&(t=l.substring(0,c.index),e.nodeValue=t,(l=l.substring(c.index+c[0].length))&&e.parentNode.insertBefore(o.createTextNode(l),e.nextSibling),s(e),t||e.parentNode.removeChild(e))}}else if("br"===e.nodeName)s(e),e.parentNode&&e.parentNode.removeChild(e);else for(e=e.firstChild;e;e=e.nextSibling)i(e)}function s(e){function t(e,n){var i=n?e.cloneNode(!1):e,s=e.parentNode;if(s){var s=t(s,1),r=e.nextSibling;s.appendChild(i);for(var a=r;a;a=r)r=a.nextSibling,s.appendChild(a)}return i}for(;!e.nextSibling;)if(e=e.parentNode,!e)return;for(var n,e=t(e.nextSibling,0);(n=e.parentNode)&&1===n.nodeType;)e=n;c.push(e)}for(var r=/(?:^|\s)nocode(?:\s|$)/,a=/\r\n?|\n/,o=e.ownerDocument,l=o.createElement("li");e.firstChild;)l.appendChild(e.firstChild);for(var c=[l],d=0;d<c.length;++d)i(c[d]);t===(0|t)&&c[0].setAttribute("value",t);var u=o.createElement("ol");u.className="linenums";for(var t=Math.max(0,0|t-1)||0,d=0,h=c.length;h>d;++d)l=c[d],l.className="L"+(d+t)%10,l.firstChild||l.appendChild(o.createTextNode(" ")),u.appendChild(l);e.appendChild(u)}function l(e,t){for(var n=t.length;--n>=0;){var i=t[n];S.hasOwnProperty(i)?u.console&&console.warn("cannot override language handler %s",i):S[i]=e}}function c(e,t){return e&&S.hasOwnProperty(e)||(e=/^\s*</.test(t)?"default-markup":"default-code"),S[e]}function d(e){var t=e.h;try{var i=n(e.c,e.i),s=i.a;e.a=s,e.d=i.d,e.e=0,c(t,s)(e);var r=/\bMSIE\s(\d+)/.exec(navigator.userAgent),r=r&&+r[1]<=8,t=/\n/g,a=e.a,o=a.length,i=0,l=e.d,d=l.length,s=0,h=e.g,p=h.length,f=0;h[p]=o;var m,g;for(g=m=0;p>g;)h[g]!==h[g+2]?(h[m++]=h[g++],h[m++]=h[g++]):g+=2;for(p=m,g=m=0;p>g;){for(var v=h[g],y=h[g+1],b=g+2;p>=b+2&&h[b+1]===y;)b+=2;h[m++]=v,h[m++]=y,g=b}h.length=m;var _,w=e.c;w&&(_=w.style.display,w.style.display="none");try{for(;d>s;){var x,S=l[s+2]||o,C=h[f+2]||o,b=Math.min(S,C),k=l[s+1];if(1!==k.nodeType&&(x=a.substring(i,b))){r&&(x=x.replace(t,"\r")),k.nodeValue=x;var T=k.ownerDocument,E=T.createElement("span");E.className=h[f+1];var N=k.parentNode;N.replaceChild(E,k),E.appendChild(k),S>i&&(l[s+1]=k=T.createTextNode(a.substring(b,S)),N.insertBefore(k,E.nextSibling))}i=b,i>=S&&(s+=2),i>=C&&(f+=2)}}finally{w&&(w.style.display=_)}}catch(D){u.console&&console.log(D&&D.stack||D)}}var u=window,h=["break,continue,do,else,for,if,return,while"],p=[[h,"auto,case,char,const,default,double,enum,extern,float,goto,inline,int,long,register,short,signed,sizeof,static,struct,switch,typedef,union,unsigned,void,volatile"],"catch,class,delete,false,import,new,operator,private,protected,public,this,throw,true,try,typeof"],f=[p,"alignof,align_union,asm,axiom,bool,concept,concept_map,const_cast,constexpr,decltype,delegate,dynamic_cast,explicit,export,friend,generic,late_check,mutable,namespace,nullptr,property,reinterpret_cast,static_assert,static_cast,template,typeid,typename,using,virtual,where"],m=[p,"abstract,assert,boolean,byte,extends,final,finally,implements,import,instanceof,interface,null,native,package,strictfp,super,synchronized,throws,transient"],g=[m,"as,base,by,checked,decimal,delegate,descending,dynamic,event,fixed,foreach,from,group,implicit,in,internal,into,is,let,lock,object,out,override,orderby,params,partial,readonly,ref,sbyte,sealed,stackalloc,string,select,uint,ulong,unchecked,unsafe,ushort,var,virtual,where"],p=[p,"debugger,eval,export,function,get,null,set,undefined,var,with,Infinity,NaN"],v=[h,"and,as,assert,class,def,del,elif,except,exec,finally,from,global,import,in,is,lambda,nonlocal,not,or,pass,print,raise,try,with,yield,False,True,None"],y=[h,"alias,and,begin,case,class,def,defined,elsif,end,ensure,false,in,module,next,nil,not,or,redo,rescue,retry,self,super,then,true,undef,unless,until,when,yield,BEGIN,END"],b=[h,"as,assert,const,copy,drop,enum,extern,fail,false,fn,impl,let,log,loop,match,mod,move,mut,priv,pub,pure,ref,self,static,struct,true,trait,type,unsafe,use"],h=[h,"case,done,elif,esac,eval,fi,function,in,local,set,then,until"],_=/^(DIR|FILE|vector|(de|priority_)?queue|list|stack|(const_)?iterator|(multi)?(set|map)|bitset|u?(int|float)\d*)\b/,w=/\S/,x=a({keywords:[f,g,p,"caller,delete,die,do,dump,elsif,eval,exit,foreach,for,goto,if,import,last,local,my,next,no,our,print,package,redo,require,sub,undef,unless,until,use,wantarray,while,BEGIN,END",v,y,h],hashComments:!0,cStyleComments:!0,multiLineStrings:!0,regexLiterals:!0}),S={};l(x,["default-code"]),l(r([],[["pln",/^[^<?]+/],["dec",/^<!\w[^>]*(?:>|$)/],["com",/^<\!--[\S\s]*?(?:--\>|$)/],["lang-",/^<\?([\S\s]+?)(?:\?>|$)/],["lang-",/^<%([\S\s]+?)(?:%>|$)/],["pun",/^(?:<[%?]|[%?]>)/],["lang-",/^<xmp\b[^>]*>([\S\s]+?)<\/xmp\b[^>]*>/i],["lang-js",/^<script\b[^>]*>([\S\s]*?)(<\/script\b[^>]*>)/i],["lang-css",/^<style\b[^>]*>([\S\s]*?)(<\/style\b[^>]*>)/i],["lang-in.tag",/^(<\/?[a-z][^<>]*>)/i]]),["default-markup","htm","html","mxml","xhtml","xml","xsl"]),l(r([["pln",/^\s+/,e," 	\r\n"],["atv",/^(?:"[^"]*"?|'[^']*'?)/,e,"\"'"]],[["tag",/^^<\/?[a-z](?:[\w-.:]*\w)?|\/?>$/i],["atn",/^(?!style[\s=]|on)[a-z](?:[\w:-]*\w)?/i],["lang-uq.val",/^=\s*([^\s"'>]*(?:[^\s"'/>]|\/(?=\s)))/],["pun",/^[/<->]+/],["lang-js",/^on\w+\s*=\s*"([^"]+)"/i],["lang-js",/^on\w+\s*=\s*'([^']+)'/i],["lang-js",/^on\w+\s*=\s*([^\s"'>]+)/i],["lang-css",/^style\s*=\s*"([^"]+)"/i],["lang-css",/^style\s*=\s*'([^']+)'/i],["lang-css",/^style\s*=\s*([^\s"'>]+)/i]]),["in.tag"]),l(r([],[["atv",/^[\S\s]+/]]),["uq.val"]),l(a({keywords:f,hashComments:!0,cStyleComments:!0,types:_}),["c","cc","cpp","cxx","cyc","m"]),l(a({keywords:"null,true,false"}),["json"]),l(a({keywords:g,hashComments:!0,cStyleComments:!0,verbatimStrings:!0,types:_}),["cs"]),l(a({keywords:m,cStyleComments:!0}),["java"]),l(a({keywords:h,hashComments:!0,multiLineStrings:!0}),["bash","bsh","csh","sh"]),l(a({keywords:v,hashComments:!0,multiLineStrings:!0,tripleQuotedStrings:!0}),["cv","py","python"]),l(a({keywords:"caller,delete,die,do,dump,elsif,eval,exit,foreach,for,goto,if,import,last,local,my,next,no,our,print,package,redo,require,sub,undef,unless,until,use,wantarray,while,BEGIN,END",hashComments:!0,multiLineStrings:!0,regexLiterals:2}),["perl","pl","pm"]),l(a({keywords:y,hashComments:!0,multiLineStrings:!0,regexLiterals:!0}),["rb","ruby"]),l(a({keywords:p,cStyleComments:!0,regexLiterals:!0}),["javascript","js"]),l(a({keywords:"all,and,by,catch,class,else,extends,false,finally,for,if,in,is,isnt,loop,new,no,not,null,of,off,on,or,return,super,then,throw,true,try,unless,until,when,while,yes",hashComments:3,cStyleComments:!0,multilineStrings:!0,tripleQuotedStrings:!0,regexLiterals:!0}),["coffee"]),l(a({keywords:b,cStyleComments:!0,multilineStrings:!0}),["rc","rs","rust"]),l(r([],[["str",/^[\S\s]+/]]),["regex"]);var C=u.PR={createSimpleLexer:r,registerLangHandler:l,sourceDecorator:a,PR_ATTRIB_NAME:"atn",PR_ATTRIB_VALUE:"atv",PR_COMMENT:"com",PR_DECLARATION:"dec",PR_KEYWORD:"kwd",PR_LITERAL:"lit",PR_NOCODE:"nocode",PR_PLAIN:"pln",PR_PUNCTUATION:"pun",PR_SOURCE:"src",PR_STRING:"str",PR_TAG:"tag",PR_TYPE:"typ",prettyPrintOne:u.prettyPrintOne=function(e,t,n){var i=document.createElement("div");return i.innerHTML="<pre>"+e+"</pre>",i=i.firstChild,n&&o(i,n,!0),d({h:t,j:n,c:i,i:1}),i.innerHTML},prettyPrint:u.prettyPrint=function(t,n){function i(){for(var n=u.PR_SHOULD_USE_CONTINUATION?f.now()+250:1/0;g<l.length&&f.now()<n;g++){for(var r=l[g],c=S,h=r;h=h.previousSibling;){var p=h.nodeType,C=(7===p||8===p)&&h.nodeValue;if(C?!/^\??prettify\b/.test(C):3!==p||/\S/.test(h.nodeValue))break;if(C){c={},C.replace(/\b(\w+)=([\w%+\-.:]+)/g,function(e,t,n){c[t]=n});break}}if(h=r.className,(c!==S||y.test(h))&&!b.test(h)){for(p=!1,C=r.parentNode;C;C=C.parentNode)if(x.test(C.tagName)&&C.className&&y.test(C.className)){p=!0;break}if(!p){if(r.className+=" prettyprinted",p=c.lang,!p){var k,p=h.match(v);!p&&(k=s(r))&&w.test(k.tagName)&&(p=k.className.match(v)),p&&(p=p[1])}if(_.test(r.tagName))C=1;else var C=r.currentStyle,T=a.defaultView,C=(C=C?C.whiteSpace:T&&T.getComputedStyle?T.getComputedStyle(r,e).getPropertyValue("white-space"):0)&&"pre"===C.substring(0,3);T=c.linenums,(T="true"===T||+T)||(T=(T=h.match(/\blinenums\b(?::(\d+))?/))?T[1]&&T[1].length?+T[1]:!0:!1),T&&o(r,T,C),m={h:p,c:r,j:T,i:C},d(m)}}}g<l.length?setTimeout(i,250):"function"==typeof t&&t()}for(var r=n||document.body,a=r.ownerDocument||document,r=[r.getElementsByTagName("pre"),r.getElementsByTagName("code"),r.getElementsByTagName("xmp")],l=[],c=0;c<r.length;++c)for(var h=0,p=r[c].length;p>h;++h)l.push(r[c][h]);var r=e,f=Date;f.now||(f={now:function(){return+new Date}});var m,g=0,v=/\blang(?:uage)?-([\w.]+)(?!\S)/,y=/\bprettyprint\b/,b=/\bprettyprinted\b/,_=/pre|xmp/i,w=/^code$/i,x=/^(?:pre|code|xmp)$/i,S={};i()}};"function"==typeof define&&define.amd&&define("google-code-prettify",[],function(){return C})}()}();