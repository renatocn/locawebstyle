!function(){var e=null;window.PR_SHOULD_USE_CONTINUATION=!0,function(){function t(e){function t(e){var t=e.charCodeAt(0);if(92!==t)return t;var i=e.charAt(1);return(t=h[i])?t:i>="0"&&"7">=i?parseInt(e.substring(1),8):"u"===i||"x"===i?parseInt(e.substring(2),16):e.charCodeAt(1)}function i(e){return 32>e?(16>e?"\\x0":"\\x")+e.toString(16):(e=String.fromCharCode(e),"\\"===e||"-"===e||"]"===e||"^"===e?"\\"+e:e)}function n(e){var n=e.substring(1,e.length-1).match(/\\u[\dA-Fa-f]{4}|\\x[\dA-Fa-f]{2}|\\[0-3][0-7]{0,2}|\\[0-7]{1,2}|\\[\S\s]|[^\\]/g),e=[],s="^"===n[0],a=["["];s&&a.push("^");for(var s=s?1:0,r=n.length;r>s;++s){var o=n[s];if(/\\[bdsw]/i.test(o))a.push(o);else{var l,o=t(o);r>s+2&&"-"===n[s+1]?(l=t(n[s+2]),s+=2):l=o,e.push([o,l]),65>l||o>122||(65>l||o>90||e.push([32|Math.max(65,o),32|Math.min(l,90)]),97>l||o>122||e.push([-33&Math.max(97,o),-33&Math.min(l,122)]))}}for(e.sort(function(e,t){return e[0]-t[0]||t[1]-e[1]}),n=[],r=[],s=0;s<e.length;++s)o=e[s],o[0]<=r[1]+1?r[1]=Math.max(r[1],o[1]):n.push(r=o);for(s=0;s<n.length;++s)o=n[s],a.push(i(o[0])),o[1]>o[0]&&(o[1]+1>o[0]&&a.push("-"),a.push(i(o[1])));return a.push("]"),a.join("")}function s(e){for(var t=e.source.match(/\[(?:[^\\\]]|\\[\S\s])*]|\\u[\dA-Fa-f]{4}|\\x[\dA-Fa-f]{2}|\\\d+|\\[^\dux]|\(\?[!:=]|[()^]|[^()[\\^]+/g),s=t.length,o=[],l=0,c=0;s>l;++l){var d=t[l];"("===d?++c:"\\"===d.charAt(0)&&(d=+d.substring(1))&&(c>=d?o[d]=-1:t[l]=i(d))}for(l=1;l<o.length;++l)-1===o[l]&&(o[l]=++a);for(c=l=0;s>l;++l)d=t[l],"("===d?(++c,o[c]||(t[l]="(?:")):"\\"===d.charAt(0)&&(d=+d.substring(1))&&c>=d&&(t[l]="\\"+o[d]);for(l=0;s>l;++l)"^"===t[l]&&"^"!==t[l+1]&&(t[l]="");if(e.ignoreCase&&r)for(l=0;s>l;++l)d=t[l],e=d.charAt(0),d.length>=2&&"["===e?t[l]=n(d):"\\"!==e&&(t[l]=d.replace(/[A-Za-z]/g,function(e){return e=e.charCodeAt(0),"["+String.fromCharCode(-33&e,32|e)+"]"}));return t.join("")}for(var a=0,r=!1,o=!1,l=0,c=e.length;c>l;++l){var d=e[l];if(d.ignoreCase)o=!0;else if(/[a-z]/i.test(d.source.replace(/\\u[\da-f]{4}|\\x[\da-f]{2}|\\[^UXux]/gi,""))){r=!0,o=!1;break}}for(var h={b:8,t:9,n:10,v:11,f:12,r:13},u=[],l=0,c=e.length;c>l;++l){if(d=e[l],d.global||d.multiline)throw Error(""+d);u.push("(?:"+s(d)+")")}return RegExp(u.join("|"),o?"gi":"g")}function i(e,t){function i(e){var l=e.nodeType;if(1==l){if(!n.test(e.className)){for(l=e.firstChild;l;l=l.nextSibling)i(l);l=e.nodeName.toLowerCase(),("br"===l||"li"===l)&&(s[o]="\n",r[o<<1]=a++,r[1|o++<<1]=e)}}else(3==l||4==l)&&(l=e.nodeValue,l.length&&(l=t?l.replace(/\r\n?/g,"\n"):l.replace(/[\t\n\r ]+/g," "),s[o]=l,r[o<<1]=a,a+=l.length,r[1|o++<<1]=e))}var n=/(?:^|\s)nocode(?:\s|$)/,s=[],a=0,r=[],o=0;return i(e),{a:s.join("").replace(/\n$/,""),d:r}}function n(e,t,i,n){t&&(e={a:t,e:e},i(e),n.push.apply(n,e.g))}function s(e){for(var t=void 0,i=e.firstChild;i;i=i.nextSibling)var n=i.nodeType,t=1===n?t?e:i:3===n?w.test(i.nodeValue)?e:t:t;return t===e?void 0:t}function a(i,s){function a(e){for(var t=e.e,i=[t,"pln"],d=0,h=e.a.match(r)||[],u={},p=0,f=h.length;f>p;++p){var m,g=h[p],v=u[g],b=void 0;if("string"==typeof v)m=!1;else{var _=o[g.charAt(0)];if(_)b=g.match(_[1]),v=_[0];else{for(m=0;l>m;++m)if(_=s[m],b=g.match(_[1])){v=_[0];break}b||(v="pln")}(m=v.length>=5&&"lang-"===v.substring(0,5))&&(!b||"string"!=typeof b[1])&&(m=!1,v="src"),m||(u[g]=v)}if(_=d,d+=g.length,m){m=b[1];var y=g.indexOf(m),w=y+m.length;b[2]&&(w=g.length-b[2].length,y=w-m.length),v=v.substring(5),n(t+_,g.substring(0,y),a,i),n(t+_+y,m,c(v,m),i),n(t+_+w,g.substring(w),a,i)}else i.push(t+_,v)}e.g=i}var r,o={};!function(){for(var n=i.concat(s),a=[],l={},c=0,d=n.length;d>c;++c){var h=n[c],u=h[3];if(u)for(var p=u.length;--p>=0;)o[u.charAt(p)]=h;h=h[1],u=""+h,l.hasOwnProperty(u)||(a.push(h),l[u]=e)}a.push(/[\S\s]/),r=t(a)}();var l=s.length;return a}function r(t){var i=[],n=[];t.tripleQuotedStrings?i.push(["str",/^(?:'''(?:[^'\\]|\\[\S\s]|''?(?=[^']))*(?:'''|$)|"""(?:[^"\\]|\\[\S\s]|""?(?=[^"]))*(?:"""|$)|'(?:[^'\\]|\\[\S\s])*(?:'|$)|"(?:[^"\\]|\\[\S\s])*(?:"|$))/,e,"'\""]):t.multiLineStrings?i.push(["str",/^(?:'(?:[^'\\]|\\[\S\s])*(?:'|$)|"(?:[^"\\]|\\[\S\s])*(?:"|$)|`(?:[^\\`]|\\[\S\s])*(?:`|$))/,e,"'\"`"]):i.push(["str",/^(?:'(?:[^\n\r'\\]|\\.)*(?:'|$)|"(?:[^\n\r"\\]|\\.)*(?:"|$))/,e,"\"'"]),t.verbatimStrings&&n.push(["str",/^@"(?:[^"]|"")*(?:"|$)/,e]);var s=t.hashComments;if(s&&(t.cStyleComments?(s>1?i.push(["com",/^#(?:##(?:[^#]|#(?!##))*(?:###|$)|.*)/,e,"#"]):i.push(["com",/^#(?:(?:define|e(?:l|nd)if|else|error|ifn?def|include|line|pragma|undef|warning)\b|[^\n\r]*)/,e,"#"]),n.push(["str",/^<(?:(?:(?:\.\.\/)*|\/?)(?:[\w-]+(?:\/[\w-]+)+)?[\w-]+\.h(?:h|pp|\+\+)?|[a-z]\w*)>/,e])):i.push(["com",/^#[^\n\r]*/,e,"#"])),t.cStyleComments&&(n.push(["com",/^\/\/[^\n\r]*/,e]),n.push(["com",/^\/\*[\S\s]*?(?:\*\/|$)/,e])),s=t.regexLiterals){var r=(s=s>1?"":"\n\r")?".":"[\\S\\s]";n.push(["lang-regex",RegExp("^(?:^^\\.?|[+-]|[!=]=?=?|\\#|%=?|&&?=?|\\(|\\*=?|[+\\-]=|->|\\/=?|::?|<<?=?|>>?>?=?|,|;|\\?|@|\\[|~|{|\\^\\^?=?|\\|\\|?=?|break|case|continue|delete|do|else|finally|instanceof|return|throw|try|typeof)\\s*("+("/(?=[^/*"+s+"])(?:[^/\\x5B\\x5C"+s+"]|\\x5C"+r+"|\\x5B(?:[^\\x5C\\x5D"+s+"]|\\x5C"+r+")*(?:\\x5D|$))+/")+")")])}return(s=t.types)&&n.push(["typ",s]),s=(""+t.keywords).replace(/^ | $/g,""),s.length&&n.push(["kwd",RegExp("^(?:"+s.replace(/[\s,]+/g,"|")+")\\b"),e]),i.push(["pln",/^\s+/,e," \r\n	 "]),s="^.[^\\s\\w.$@'\"`/\\\\]*",t.regexLiterals&&(s+="(?!s*/)"),n.push(["lit",/^@[$_a-z][\w$@]*/i,e],["typ",/^(?:[@_]?[A-Z]+[a-z][\w$@]*|\w+_t\b)/,e],["pln",/^[$_a-z][\w$@]*/i,e],["lit",/^(?:0x[\da-f]+|(?:\d(?:_\d+)*\d*(?:\.\d*)?|\.\d\+)(?:e[+-]?\d+)?)[a-z]*/i,e,"0123456789"],["pln",/^\\[\S\s]?/,e],["pun",RegExp(s),e]),a(i,n)}function o(e,t,i){function n(e){var t=e.nodeType;if(1!=t||a.test(e.className)){if((3==t||4==t)&&i){var l=e.nodeValue,c=l.match(r);c&&(t=l.substring(0,c.index),e.nodeValue=t,(l=l.substring(c.index+c[0].length))&&e.parentNode.insertBefore(o.createTextNode(l),e.nextSibling),s(e),t||e.parentNode.removeChild(e))}}else if("br"===e.nodeName)s(e),e.parentNode&&e.parentNode.removeChild(e);else for(e=e.firstChild;e;e=e.nextSibling)n(e)}function s(e){function t(e,i){var n=i?e.cloneNode(!1):e,s=e.parentNode;if(s){var s=t(s,1),a=e.nextSibling;s.appendChild(n);for(var r=a;r;r=a)a=r.nextSibling,s.appendChild(r)}return n}for(;!e.nextSibling;)if(e=e.parentNode,!e)return;for(var i,e=t(e.nextSibling,0);(i=e.parentNode)&&1===i.nodeType;)e=i;c.push(e)}for(var a=/(?:^|\s)nocode(?:\s|$)/,r=/\r\n?|\n/,o=e.ownerDocument,l=o.createElement("li");e.firstChild;)l.appendChild(e.firstChild);for(var c=[l],d=0;d<c.length;++d)n(c[d]);t===(0|t)&&c[0].setAttribute("value",t);var h=o.createElement("ol");h.className="linenums";for(var t=Math.max(0,0|t-1)||0,d=0,u=c.length;u>d;++d)l=c[d],l.className="L"+(d+t)%10,l.firstChild||l.appendChild(o.createTextNode(" ")),h.appendChild(l);e.appendChild(h)}function l(e,t){for(var i=t.length;--i>=0;){var n=t[i];S.hasOwnProperty(n)?h.console&&console.warn("cannot override language handler %s",n):S[n]=e}}function c(e,t){return e&&S.hasOwnProperty(e)||(e=/^\s*</.test(t)?"default-markup":"default-code"),S[e]}function d(e){var t=e.h;try{var n=i(e.c,e.i),s=n.a;e.a=s,e.d=n.d,e.e=0,c(t,s)(e);var a=/\bMSIE\s(\d+)/.exec(navigator.userAgent),a=a&&+a[1]<=8,t=/\n/g,r=e.a,o=r.length,n=0,l=e.d,d=l.length,s=0,u=e.g,p=u.length,f=0;u[p]=o;var m,g;for(g=m=0;p>g;)u[g]!==u[g+2]?(u[m++]=u[g++],u[m++]=u[g++]):g+=2;for(p=m,g=m=0;p>g;){for(var v=u[g],b=u[g+1],_=g+2;p>=_+2&&u[_+1]===b;)_+=2;u[m++]=v,u[m++]=b,g=_}u.length=m;var y,w=e.c;w&&(y=w.style.display,w.style.display="none");try{for(;d>s;){var k,S=l[s+2]||o,x=u[f+2]||o,_=Math.min(S,x),C=l[s+1];if(1!==C.nodeType&&(k=r.substring(n,_))){a&&(k=k.replace(t,"\r")),C.nodeValue=k;var D=C.ownerDocument,T=D.createElement("span");T.className=u[f+1];var P=C.parentNode;P.replaceChild(T,C),T.appendChild(C),S>n&&(l[s+1]=C=D.createTextNode(r.substring(_,S)),P.insertBefore(C,T.nextSibling))}n=_,n>=S&&(s+=2),n>=x&&(f+=2)}}finally{w&&(w.style.display=y)}}catch(E){h.console&&console.log(E&&E.stack||E)}}var h=window,u=["break,continue,do,else,for,if,return,while"],p=[[u,"auto,case,char,const,default,double,enum,extern,float,goto,inline,int,long,register,short,signed,sizeof,static,struct,switch,typedef,union,unsigned,void,volatile"],"catch,class,delete,false,import,new,operator,private,protected,public,this,throw,true,try,typeof"],f=[p,"alignof,align_union,asm,axiom,bool,concept,concept_map,const_cast,constexpr,decltype,delegate,dynamic_cast,explicit,export,friend,generic,late_check,mutable,namespace,nullptr,property,reinterpret_cast,static_assert,static_cast,template,typeid,typename,using,virtual,where"],m=[p,"abstract,assert,boolean,byte,extends,final,finally,implements,import,instanceof,interface,null,native,package,strictfp,super,synchronized,throws,transient"],g=[m,"as,base,by,checked,decimal,delegate,descending,dynamic,event,fixed,foreach,from,group,implicit,in,internal,into,is,let,lock,object,out,override,orderby,params,partial,readonly,ref,sbyte,sealed,stackalloc,string,select,uint,ulong,unchecked,unsafe,ushort,var,virtual,where"],p=[p,"debugger,eval,export,function,get,null,set,undefined,var,with,Infinity,NaN"],v=[u,"and,as,assert,class,def,del,elif,except,exec,finally,from,global,import,in,is,lambda,nonlocal,not,or,pass,print,raise,try,with,yield,False,True,None"],b=[u,"alias,and,begin,case,class,def,defined,elsif,end,ensure,false,in,module,next,nil,not,or,redo,rescue,retry,self,super,then,true,undef,unless,until,when,yield,BEGIN,END"],_=[u,"as,assert,const,copy,drop,enum,extern,fail,false,fn,impl,let,log,loop,match,mod,move,mut,priv,pub,pure,ref,self,static,struct,true,trait,type,unsafe,use"],u=[u,"case,done,elif,esac,eval,fi,function,in,local,set,then,until"],y=/^(DIR|FILE|vector|(de|priority_)?queue|list|stack|(const_)?iterator|(multi)?(set|map)|bitset|u?(int|float)\d*)\b/,w=/\S/,k=r({keywords:[f,g,p,"caller,delete,die,do,dump,elsif,eval,exit,foreach,for,goto,if,import,last,local,my,next,no,our,print,package,redo,require,sub,undef,unless,until,use,wantarray,while,BEGIN,END",v,b,u],hashComments:!0,cStyleComments:!0,multiLineStrings:!0,regexLiterals:!0}),S={};l(k,["default-code"]),l(a([],[["pln",/^[^<?]+/],["dec",/^<!\w[^>]*(?:>|$)/],["com",/^<\!--[\S\s]*?(?:--\>|$)/],["lang-",/^<\?([\S\s]+?)(?:\?>|$)/],["lang-",/^<%([\S\s]+?)(?:%>|$)/],["pun",/^(?:<[%?]|[%?]>)/],["lang-",/^<xmp\b[^>]*>([\S\s]+?)<\/xmp\b[^>]*>/i],["lang-js",/^<script\b[^>]*>([\S\s]*?)(<\/script\b[^>]*>)/i],["lang-css",/^<style\b[^>]*>([\S\s]*?)(<\/style\b[^>]*>)/i],["lang-in.tag",/^(<\/?[a-z][^<>]*>)/i]]),["default-markup","htm","html","mxml","xhtml","xml","xsl"]),l(a([["pln",/^\s+/,e," 	\r\n"],["atv",/^(?:"[^"]*"?|'[^']*'?)/,e,"\"'"]],[["tag",/^^<\/?[a-z](?:[\w-.:]*\w)?|\/?>$/i],["atn",/^(?!style[\s=]|on)[a-z](?:[\w:-]*\w)?/i],["lang-uq.val",/^=\s*([^\s"'>]*(?:[^\s"'/>]|\/(?=\s)))/],["pun",/^[/<->]+/],["lang-js",/^on\w+\s*=\s*"([^"]+)"/i],["lang-js",/^on\w+\s*=\s*'([^']+)'/i],["lang-js",/^on\w+\s*=\s*([^\s"'>]+)/i],["lang-css",/^style\s*=\s*"([^"]+)"/i],["lang-css",/^style\s*=\s*'([^']+)'/i],["lang-css",/^style\s*=\s*([^\s"'>]+)/i]]),["in.tag"]),l(a([],[["atv",/^[\S\s]+/]]),["uq.val"]),l(r({keywords:f,hashComments:!0,cStyleComments:!0,types:y}),["c","cc","cpp","cxx","cyc","m"]),l(r({keywords:"null,true,false"}),["json"]),l(r({keywords:g,hashComments:!0,cStyleComments:!0,verbatimStrings:!0,types:y}),["cs"]),l(r({keywords:m,cStyleComments:!0}),["java"]),l(r({keywords:u,hashComments:!0,multiLineStrings:!0}),["bash","bsh","csh","sh"]),l(r({keywords:v,hashComments:!0,multiLineStrings:!0,tripleQuotedStrings:!0}),["cv","py","python"]),l(r({keywords:"caller,delete,die,do,dump,elsif,eval,exit,foreach,for,goto,if,import,last,local,my,next,no,our,print,package,redo,require,sub,undef,unless,until,use,wantarray,while,BEGIN,END",hashComments:!0,multiLineStrings:!0,regexLiterals:2}),["perl","pl","pm"]),l(r({keywords:b,hashComments:!0,multiLineStrings:!0,regexLiterals:!0}),["rb","ruby"]),l(r({keywords:p,cStyleComments:!0,regexLiterals:!0}),["javascript","js"]),l(r({keywords:"all,and,by,catch,class,else,extends,false,finally,for,if,in,is,isnt,loop,new,no,not,null,of,off,on,or,return,super,then,throw,true,try,unless,until,when,while,yes",hashComments:3,cStyleComments:!0,multilineStrings:!0,tripleQuotedStrings:!0,regexLiterals:!0}),["coffee"]),l(r({keywords:_,cStyleComments:!0,multilineStrings:!0}),["rc","rs","rust"]),l(a([],[["str",/^[\S\s]+/]]),["regex"]);var x=h.PR={createSimpleLexer:a,registerLangHandler:l,sourceDecorator:r,PR_ATTRIB_NAME:"atn",PR_ATTRIB_VALUE:"atv",PR_COMMENT:"com",PR_DECLARATION:"dec",PR_KEYWORD:"kwd",PR_LITERAL:"lit",PR_NOCODE:"nocode",PR_PLAIN:"pln",PR_PUNCTUATION:"pun",PR_SOURCE:"src",PR_STRING:"str",PR_TAG:"tag",PR_TYPE:"typ",prettyPrintOne:h.prettyPrintOne=function(e,t,i){var n=document.createElement("div");return n.innerHTML="<pre>"+e+"</pre>",n=n.firstChild,i&&o(n,i,!0),d({h:t,j:i,c:n,i:1}),n.innerHTML},prettyPrint:h.prettyPrint=function(t,i){function n(){for(var i=h.PR_SHOULD_USE_CONTINUATION?f.now()+250:1/0;g<l.length&&f.now()<i;g++){for(var a=l[g],c=S,u=a;u=u.previousSibling;){var p=u.nodeType,x=(7===p||8===p)&&u.nodeValue;if(x?!/^\??prettify\b/.test(x):3!==p||/\S/.test(u.nodeValue))break;if(x){c={},x.replace(/\b(\w+)=([\w%+\-.:]+)/g,function(e,t,i){c[t]=i});break}}if(u=a.className,(c!==S||b.test(u))&&!_.test(u)){for(p=!1,x=a.parentNode;x;x=x.parentNode)if(k.test(x.tagName)&&x.className&&b.test(x.className)){p=!0;break}if(!p){if(a.className+=" prettyprinted",p=c.lang,!p){var C,p=u.match(v);!p&&(C=s(a))&&w.test(C.tagName)&&(p=C.className.match(v)),p&&(p=p[1])}if(y.test(a.tagName))x=1;else var x=a.currentStyle,D=r.defaultView,x=(x=x?x.whiteSpace:D&&D.getComputedStyle?D.getComputedStyle(a,e).getPropertyValue("white-space"):0)&&"pre"===x.substring(0,3);D=c.linenums,(D="true"===D||+D)||(D=(D=u.match(/\blinenums\b(?::(\d+))?/))?D[1]&&D[1].length?+D[1]:!0:!1),D&&o(a,D,x),m={h:p,c:a,j:D,i:x},d(m)}}}g<l.length?setTimeout(n,250):"function"==typeof t&&t()}for(var a=i||document.body,r=a.ownerDocument||document,a=[a.getElementsByTagName("pre"),a.getElementsByTagName("code"),a.getElementsByTagName("xmp")],l=[],c=0;c<a.length;++c)for(var u=0,p=a[c].length;p>u;++u)l.push(a[c][u]);var a=e,f=Date;f.now||(f={now:function(){return+new Date}});var m,g=0,v=/\blang(?:uage)?-([\w.]+)(?!\S)/,b=/\bprettyprint\b/,_=/\bprettyprinted\b/,y=/pre|xmp/i,w=/^code$/i,k=/^(?:pre|code|xmp)$/i,S={};n()}};"function"==typeof define&&define.amd&&define("google-code-prettify",[],function(){return x})}()}();